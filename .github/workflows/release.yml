name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-linux
          - x86_64-macos
          - x86_64-windows
          - aarch64-linux
          - aarch64-macos
          - aarch64-windows
          - riscv64-linux
          - powerpc64le-linux
          - mips64-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig Compiler
        uses: mlugg/setup-zig@v1.2.1

      - name: Build
        run: zig build -Doptimize=ReleaseSafe -Dtarget=${{ matrix.target }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: zlox-${{ matrix.target }}
          path: ./zig-out/bin/zlox-${{ matrix.target }}${{ contains(matrix.target, 'windows') && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          merge-multiple: true

      - name: Move artifacts to root of release-assets
        run: |
          find release-assets -type f -exec mv {} release-assets/ \;
          find release-assets -type d -empty -delete

      - name: Generate SHA256 checksums
        run: |
          cd release-assets
          sha256sum * > SHA256SUMS.txt

      - name: Create release notes
        run: |
          echo "## zlox ${{ github.ref_name }}" > release-notes.md
          echo "" >> release-notes.md
          echo "**SHA256 Checksums**:" >> release-notes.md
          echo '```' >> release-notes.md
          cat release-assets/SHA256SUMS.txt >> release-notes.md
          echo '```' >> release-notes.md
  
      - name: Create release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "release-assets/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          bodyFile: release-notes.md
          draft: false
          prerelease: false
          generateReleaseNotes: false